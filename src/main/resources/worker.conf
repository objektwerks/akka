akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    mailbox {
      requirements {
        "akka.dispatch.BoundedDequeBasedMessageQueueSemantics" = bounded-mailbox
      }
    }
    deployment {
      /worker {
        mailbox = bounded-mailbox
      }
    }
  }
  remote {
    log-remote-lifecycle-events = off
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
    }
  }
  cluster {
    seed-nodes = [
      "akka.tcp://words@127.0.0.1:2551",
      "akka.tcp://words@127.0.0.1:2552"
    ]
    seed-node-timeout = 3s
    retry-unsuccessful-join-after = 3s
    auto-down-unreachable-after = 30s
    metrics {
      enabled = off
      native-library-extract-folder = ./target/output/native
    }
    role {
      seed.min-nr-of-members = 1
      master.min-nr-of-members = 1
      worker.min-nr-of-members = 2
    }
    roles = ["worker"]
  }
  extensions = [
    "akka.cluster.metrics.ClusterMetricsExtension"
  ]
  loglevel = "INFO"
  stdout-loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = 0
  log-dead-letters-during-shutdown = off
  event-handlers = [ "akka.event.Logging$DefaultLogger" ]
}

bounded-mailbox {
  mailbox-type = "akka.dispatch.BoundedMailbox"
  mailbox-capacity = 10
  mailbox-push-timeout-time = 10s
}